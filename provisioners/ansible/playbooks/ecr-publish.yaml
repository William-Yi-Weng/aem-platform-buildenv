---

- name: Publish a Docker Image to ECR
  hosts: all
  gather_facts: no
  connection: local
  
  tasks:
    - name: create log folder
      file: 
        path: ../../../logs/
        state: directory

    - name: build image
      shell: "PACKER_LOG_PATH=logs/aem-platform-buildenv.log \
		                          PACKER_LOG=1 \
                              packer build \
                              -var 'version={{ image_version }}' \
                              -var 'current_repo={{ aws.ecr.host }}/{{ env_image.name }}:{{ image_version }}' \
                              -var 'latest_repo={{ aws.ecr.host }}/{{ env_image.name }}:latest'
		                          templates/docker.json"
      args:
        executable: /bin/bash
        chdir: "../../../"

    - name: docker login (must `--no-include-email`)
      shell: "$(aws ecr get-login --region {{ aws.ecr.region }} --no-include-email)"
      args:
        executable: /bin/bash

    - name: add tag (current version)
      docker_image:
        name: "{{ aws.ecr.host }}/{{ env_image.name }}:{{ image_version }}"
        repository: "{{ aws.ecr.host }}/{{ env_image.name }}"
        tag: "{{ aws.ecr.host }}/{{ env_image.name }}:{{ image_version }}"

    - name: push image to ecr
      docker_image:
        name: "{{ aws.ecr.host }}/{{ env_image.name }}:{{ image_version }}"
        push: yes

    - name: add tag (latest)
      docker_image:
        name: "{{ aws.ecr.host }}/{{ env_image.name }}:{{ latest }}"
        repository: "{{ aws.ecr.host }}/{{ env_image.name }}"
        tag: "{{ aws.ecr.host }}/{{ env_image.name }}:{{ latest }}"

    - name: update the atest image in ECR
      docker_image:
        name: "{{ aws.ecr.host }}/{{ env_image.name }}:{{ latest }}"
        push: yes